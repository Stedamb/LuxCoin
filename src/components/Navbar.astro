---
// Navigation component for LuxCoin
---

<nav id="navbar" class="py-8 absolute top-0 left-0 right-0 z-50">
  <div class="container mx-auto px-4">
    <div class="relative flex justify-between items-center">
      <div class="flex space-x-8 items-center">
        <div class="hidden md:flex space-x-6">
          <a href="/collection" class="text-stone-200 hover:text-stone-100 transition-colors text-xl">La collezione</a>
          <a href="/about" class="text-stone-200 hover:text-stone-100 transition-colors text-xl">Chi siamo</a>
        </div>
      </div>

      <a href="/" class="absolute bottom-[-2px] md:bottom-[2px] left-1/2 -translate-x-1/2 text-stone-200 font-serif text-3xl md:text-4xl">LuxCoin</a>

      <div class="hidden md:flex items-center space-x-4">
        <a href="https://www.ebay.com/sch/i.html?_nkw=luxcoin" class="inline-flex items-center gap-2 bg-primary hover:bg-accent text-stone-100 text-lg font-medium tracking-wide px-4 py-2 rounded-sm transition-colors">
          <span>Vai a eBay</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      </div>
      
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class="text-stone-200 hover:text-stone-100">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>

    </div>
    
    <!-- Mobile menu -->
    <div id="mobile-menu" class="fixed inset-0 bg-neutral-900 backdrop-blur-sm flex-col items-center justify-center z-40 hidden">
      <button id="close-menu-button" class="absolute top-8 right-4 text-stone-100 hover:text-amber-700 transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <div class="flex flex-col items-center justify-center min-h-screen">
        <nav class="flex flex-col items-center gap-12 py-8">
          <a href="/" class="mobile-menu-item font-serif text-2xl text-stone-100 hover:text-amber-700 transition-colors relative group">
            Home
            <span class="absolute -bottom-2 left-0 w-0 h-0.5 bg-amber-700 group-hover:w-full transition-all duration-300"></span>
          </a>
          <a href="/collection" class="mobile-menu-item font-serif text-2xl text-stone-100 hover:text-amber-700 transition-colors relative group">
            Collection
            <span class="absolute -bottom-2 left-0 w-0 h-0.5 bg-amber-700 group-hover:w-full transition-all duration-300"></span>
          </a>
          <a href="/about" class="mobile-menu-item font-serif text-2xl text-stone-100 hover:text-amber-700 transition-colors relative group">
            About
            <span class="absolute -bottom-2 left-0 w-0 h-0.5 bg-amber-700 group-hover:w-full transition-all duration-300"></span>
          </a>
          <a href="https://www.ebay.com/sch/i.html?_nkw=luxcoin" class="mobile-menu-item font-serif text-2xl text-stone-100 hover:text-amber-700 transition-colors relative group inline-flex items-center gap-2">
            <span>eBay</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="size-7 mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
            <span class="absolute -bottom-2 left-0 w-0 h-0.5 bg-amber-700 group-hover:w-full transition-all duration-300"></span>
          </a>
        </nav>
      </div>
    </div>
  </div>
</nav>


<style>
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  @keyframes fadeInDown {
    from { 
      opacity: 0;
      transform: translateY(-20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .mobile-menu-item {
    opacity: 0;
  }
  
  .menu-open .mobile-menu-item:nth-child(1) {
    animation: fadeInDown 0.5s ease forwards 0.1s;
  }
  
  .menu-open .mobile-menu-item:nth-child(2) {
    animation: fadeInDown 0.5s ease forwards 0.2s;
  }
  
  .menu-open .mobile-menu-item:nth-child(3) {
    animation: fadeInDown 0.5s ease forwards 0.3s;
  }
  
  .menu-open .mobile-menu-item:nth-child(4) {
    animation: fadeInDown 0.5s ease forwards 0.4s;
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  const closeMenuButton = document.getElementById('close-menu-button');
  
  // Function to open the menu
  const openMenu = () => {
    // window.scrollTo(0, 0);
    mobileMenu.classList.remove('hidden');
    mobileMenu.classList.add('flex', 'menu-open');
    document.body.style.overflow = 'hidden';
    mobileMenu.style.animation = 'fadeIn 0.3s ease-in-out';
  };
  
  // Function to close the menu with animation
  const closeMenu = () => {
    // Start the fade-out animation
    mobileMenu.style.animation = 'fadeOut 0.3s ease-in-out forwards';
    
    // Remove classes after animation completes
    setTimeout(() => {
      mobileMenu.classList.add('hidden');
      mobileMenu.classList.remove('flex', 'menu-open');
      document.body.style.overflow = 'unset';
    }, 300); // Match this to your animation duration
  };
  
  if (mobileMenuButton && mobileMenu) {
    // Open menu when clicking the menu button
    mobileMenuButton.addEventListener('click', openMenu);
    
    // Close menu when clicking the close button
    if (closeMenuButton) {
      closeMenuButton.addEventListener('click', closeMenu);
    }
    
    // Close menu when clicking on links
    const menuLinks = mobileMenu.querySelectorAll('a');
    menuLinks.forEach(link => {
      link.addEventListener('click', closeMenu);
    });
    
    // Close menu when pressing Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && mobileMenu.classList.contains('flex')) {
        closeMenu();
      }
    });
  }

  // Navbar scroll behavior
  const navbar = document.getElementById('navbar');
  const logo = navbar?.querySelector('img');
  let lastScroll = window.scrollY;

  const handleScroll = () => {
    const currentScroll = window.scrollY;

    if (currentScroll > window.innerHeight * 0.8) {
      // After 80%, show navbar with animation
      navbar?.classList.remove('absolute', 'hidden');
      navbar?.classList.add('fixed', 'bg-neutral-900');

      if (currentScroll < lastScroll) {
        // Scrolling up after 80%

      } else {
        // Scrolling down after 80%

        logo?.classList.add('hidden');
      }
    } else if (currentScroll > window.innerHeight * 0.5) {
      // Between 50% and 80%, hide navbar
      navbar?.classList.remove('absolute', 'translate-y-0');
      logo?.classList.remove('hidden');

      navbar?.classList.add(
        'hidden',
        'fixed',
        'bg-neutral-900',
        '!py-4'
      );
    } else {
      // Before 50%, show navbar at top
      navbar?.classList.remove(
        'hidden',
        'fixed',
        'bg-neutral-900',
        '!py-4'
      );
      navbar?.classList.add('absolute');
    }

    lastScroll = currentScroll;
  };

  window.addEventListener('scroll', handleScroll);
</script>
